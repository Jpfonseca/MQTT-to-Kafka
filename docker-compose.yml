# NOTE: a .env file is required to run this:
# https://docs.docker.com/compose/env-file/
# This file houses env vars common to all services defined in this file

version: '2'
services:
  # this is necessary if I want to host my own Kafka.
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    restart: unless-stopped
    #logging:
        #driver: syslog
        #options:
            #syslog-address: "${PAPERTRAIL_DESTINATION}"
  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CREATE_TOPICS=weather:1:1
    depends_on:
      - zookeeper
    restart: unless-stopped
    #logging:
        #driver: syslog
        #options:
            #syslog-address: "${PAPERTRAIL_DESTINATION}"

  mqtt:
    image: toke/mosquitto
    ports:
      - "1883:1883"

  consume_to_pg:
    build: .
    command: ["python", "consume_to_pg.py"]
    volumes:
      - ./:/app
    environment:
      - POSTGRES_PASSWD
      - MAX_CONNECTION_RETRIES
      - KAFKA_HOSTS
    depends_on:
      - kafka
      - message_intercept

  consume_to_cloudwatch:
    build: .
    command: ["python", "consume_to_cloudwatch.py"]
    volumes:
      - ./:/app
    environment:
      - MAX_CONNECTION_RETRIES
      - KAFKA_HOSTS
      - AWS_DEFAULT_REGION
      - AWS_SECRET_ACCESS_KEY
      - AWS_ACCESS_KEY_ID
    depends_on:
      - kafka
      - message_intercept
#    restart: unless-stopped
#
#  consume_to_cloudwatch:
#    build: .
#    command: ["python", "consume_to_cloudwatch.py"]
#    environment:
#      - AWS_DEFAULT_REGION
#      - AWS_SECRET_ACCESS_KEY
#      - AWS_ACCESS_KEY_ID
#    depends_on:
#      - kafka
#      - message_intercept
#    restart: unless-stopped

  message_intercept:
    build: .
    command: ["python", "message_intercept.py"]
    volumes:
      - ./:/app
    depends_on:
      - kafka
      - mqtt
    environment:
      - KAFKA_HOSTS
    restart: unless-stopped
